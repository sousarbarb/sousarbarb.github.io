{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ricardo B. Sousa Personal Webpage","text":""},{"location":"#identifiers","title":"Identifiers","text":"<ul> <li>Ci\u00eanciaVITAE: D11E-2C67-1CCE</li> <li>ORCiD: 0000-0003-4537-5095</li> <li>AuthenticusID: R-00J-JZZ</li> <li>Google Scholar: Bz2FMqYAAAAJ</li> <li>Researcher ID: AAG-9201-2021</li> <li>Scopus Author ID: 57217044620</li> </ul>"},{"location":"#links","title":"Links","text":"<ul> <li>@sousarbarb (GitHub)</li> <li>@sousarbarb (GitLab)</li> <li>@ricardo.b.sousa (GitLab INESC TEC)</li> <li>LinkedIn</li> <li>ResearchGate</li> <li>YouTube</li> </ul>"},{"location":"#contacts","title":"Contacts","text":"<p>Ricardo Barbosa Sousa</p> <p>Robotics Researcher at CRIIS - Centre for Robotics in Industry and Intelligent Systems from INESC TEC - Institute for Systems and Computer Engineering, Technology and Science, 4200-465 Porto, Portugal</p> <ul> <li>Mail: ricardo.b.sousa@inesctec.pt</li> <li>Tel.: +351 220 413 317</li> </ul> <p>PhD Candidate in Electrical and Computers Engineering (ECE) at the Faculty of Engineering, University of Porto (FEUP), 4200-465 Porto, Portugal</p> <p>Researcher at the 5dpo Robotics Team, 4200-465 Porto, Portugal</p> <ul> <li>Mail: up201503004@edu.fe.up.pt</li> </ul>"},{"location":"awards/","title":"Awards","text":"<p>3<sup>rd</sup> place with the Best Robot (technical-scientific solution) and Cheetah (best average time) awards at the Dragster competition of the Portuguese Robotics Open (FNR) 2025, Madeira, Portugal, April 2025.</p> <p>Best Paper Award for the work A Robotic Framework for the Robot@Factory 4.0 Competition at the 2024 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC), Paredes de Coura, Portugal, May 2024.</p> <p>Best Presenter Award in the Session Topic Model-based System Design, Parameter Optimization, and Data Measurement for the paper Line Fitting-Based Corner-Like Detector for 2D Laser Scanners Data at the 10<sup>th</sup> International Conference on Automation, Robotics, and Applications (ICARA), Athens, Greece, February 2024.</p> <p>1<sup>st</sup> and 2<sup>nd</sup> places at the Robot@Factory 4.0 competition of the Portuguese Robotics Open (FNR) 2023, Tomar, Portugal, May 2023.</p> <p>1<sup>st</sup> place at the Robot@Factory 4.0 competition of the Portuguese Robotics Open (FNR) 2022, Santa Maria da Feira, Aveiro, Portugal, May 2022.</p> <p>ABB 2020 Award relative to the M.Sc. thesis with the best classification developed on one of the following themes: Renewable Energies, Industrial Automation, or Robotics.</p> <p>3<sup>rd</sup> place at the Robot@Factory Lite competition of the Portuguese Robotics Open (FNR) 2019, Gondomar, Porto, Portugal, May 2019.</p> <p>2<sup>nd</sup> place in the challenge All Aboard IKEA of the competition Academic Games of Engineering, AEFEUP, Porto, Portugal, April 2019.</p> <p>Merit Scholarship for the academic year 2016/2017 (best 12 out of 6000).</p>"},{"location":"cv/","title":"Curriculum Vitae","text":""},{"location":"cv/#experience","title":"Experience","text":"<p>Visiting Researcher @ Sapienza Universit\u00e0 di Roma (Rome, Italy)</p> <ul> <li>February 2024 - July 2024</li> <li>Research Topics:<ul> <li>Distance Maps</li> <li>Simultaneous Localisation and Mapping (SLAM)</li> </ul> </li> <li>Skills:<ul> <li>C/C++</li> <li>Robot Operating System (ROS)</li> <li>Simultaneous Localisation and Mapping (SLAM)</li> </ul> </li> <li>Supervisor: Prof. Dr. Giorgio Grisetti   (grisetti@diag.uniroma1.it)</li> </ul> <p>INESC TEC - Institute for Systems and Computer Engineering, Technology and Science (Porto, Portugal)</p> <ul> <li>Researcher (April 2023 - Present)</li> <li>Graduate Research Scholarship (September 2020 - March 2023)</li> <li>Research Topics:<ul> <li>Control Systems (wheel speed controllers, robot positioning control)</li> <li>Robot Calibration (wheeled odometry, extrinsic sensor parameters)</li> <li>Sensor Fusion (filtering)</li> <li>Simultaneous Localisation and Mapping (SLAM)</li> </ul> </li> <li>Skills:<ul> <li>C/C++ (implementation and online execution)</li> <li>LaTeX (writing)</li> <li>Python, MATLAB, Octave (data processing and analysis, prototyping)</li> <li>Robot Operating System (ROS)</li> <li>Simultaneous Localisation and Mapping (SLAM)</li> <li>Team Management</li> <li>Team Work</li> </ul> </li> <li>Supervisors:<ul> <li>Prof. Dr. Ant\u00f3nio Paulo Moreira   (amoreira@fe.up.pt)</li> <li>H\u00e9ber Miguel Sobreira, PhD   (heber.m.sobreira@inesctec.pt)</li> <li>Prof. Dr. Manuel F. Silva (mss@isep.ipp.pt)</li> </ul> </li> </ul> <p>Invited Assistant @ Faculty of Engineering, University of Porto (FEUP) (Porto, Portugal)</p> <ul> <li>September 2021 - August 2023</li> <li>Courses:<ul> <li>Software Design (MSc in ECE) (2021/22 1\u00baS, 2022/23 1\u00baS)</li> <li>Industrial Informatics (MSc in ECE) (2021/22 2\u00baS, 2022/23 2\u00baS)</li> </ul> </li> <li>Supervisors:<ul> <li>Prof. Dr. Armando Jorge Sousa (asousa@fe.up.pt)</li> <li>Prof. Dr. M\u00e1rio Jorge Sousa (msousa@fe.up.pt)</li> <li>Prof. Dr. Nuno Flores (nflores@fe.up.pt)</li> </ul> </li> </ul> <p>Clarinet Teacher @ Escola de M\u00fasica da Sociedade Filarm\u00f3nica de Crestuma (Vila Nova de Gaia, Porto, Portugal)</p> <ul> <li>July 2017 - July 2021</li> <li>Supervisor: Joana Oliveira   (joanaoliveira.flauta@gmail.com)</li> </ul> <p>Trainee Assistant @ Faculty of Engineering, University of Porto (FEUP) (Porto, Portugal)</p> <ul> <li>February 2021 - June 2021</li> <li>Course: Industrial Robotics (MSc in ECE)</li> <li>Teaching Topic: Multivariable Control   (DOI: 10.13140/RG.2.2.27306.13761)</li> <li>Supervisor: Prof. Dr. Ant\u00f3nio Paulo Moreira   (amoreira@fe.up.pt)</li> </ul> <p>Tutor @ Faculty of Engineering, University of Porto (FEUP) (Porto, Portugal)</p> <ul> <li>September 2019 - November 2019</li> <li>Course: Project FEUP (BSc in ECE)</li> </ul>"},{"location":"cv/#education","title":"Education","text":"<p>PhD Candidate in ECE @ Faculty of Engineering, University of Porto (FEUP) (Porto, Portugal)</p> <ul> <li>February 2021 - Present</li> <li>GPA: 18.40/20 (curricular courses)</li> <li>PhD Thesis in Long-Term Localisation and Mapping with Mobile Robots</li> <li>Supervisors:<ul> <li>Prof. Dr. Ant\u00f3nio Paulo Moreira   (amoreira@fe.up.pt)</li> <li>H\u00e9ber Miguel Sobreira, PhD   (heber.m.sobreira@inesctec.pt)</li> </ul> </li> </ul> <p>MSc in ECE @ Faculty of Engineering, University of Porto (FEUP) (Porto, Portugal)</p> <ul> <li>September 2015 - July 2020</li> <li>GPA: 18.20/20</li> <li>MSc Thesis in Odometry and Extrinsic Sensor Calibration on Mobile Robots   (DOI: 10.13140/RG.2.2.27052.28802)</li> <li>Supervisors:<ul> <li>Prof. Dr. Ant\u00f3nio Paulo Moreira   (amoreira@fe.up.pt)</li> <li>Marcelo R. Petry, PhD   (marcelo.petry@inesctec.pt)</li> </ul> </li> </ul> <p>Scientific-Technological Course in Industrial Electronics and Automation @ Col\u00e9gio de Gaia (Vila Nova de Gaia, Porto, Portugal)</p> <ul> <li>September 2012 - July 2015</li> <li>GPA: 19.1/20.0</li> <li>Technological Final Project on an Automated Hydroponic in a   Controlled-Environment Room</li> </ul> <p>Secondary Music Course in Clarinet @ Funda\u00e7\u00e3o Conservat\u00f3rio Regional de Gaia (Vila Nova de Gaia, Porto, Portugal)</p> <ul> <li>September 2007 - July 2015</li> <li>GPA: 16/20</li> <li>Supervisors:<ul> <li>Tiago Abrantes   (7<sup>th</sup> and 8<sup>th</sup> year)</li> <li>Daniel Monteiro   (5<sup>th</sup> and 6<sup>th</sup> year)</li> <li>Manuel Moura (4<sup>th</sup> year)</li> <li>Jo\u00e3o Moreira   (3<sup>rd</sup> year)</li> <li>Nuno Pinto   (1<sup>st</sup> and 2<sup>nd</sup> year)</li> </ul> </li> </ul>"},{"location":"cv/#projects","title":"Projects","text":"<ul> <li>5G &amp; Digital Transformation Test Bed   (November 2023 - Present)<ul> <li>ID: 03/C16-i02/2022.PC651590110-00000107/</li> <li>Research Topics:   Remote Control of Mobile Robots over 5G Networks</li> </ul> </li> <li>GreenAuto: Green innovation for the Automotive Industry   (April 2023 - Present)<ul> <li>ID: 02/C05-i01.02/2022.PC644867037-00000013</li> <li>Research Topics:   Automatic Pallet Detection,   Long-Term Localisation and Mapping with Mobile Robots,   Multi-Robot Coordination</li> </ul> </li> <li>PRODUTECH R3 (Recovery-Resilience-Reindustrialisation): Production   Technologies Cluster Mobilising Agenda for Reindustrialisation   (April 2023 - Present)<ul> <li>ID: 02/C05-i01.01/2022.PC645808870-00000067</li> <li>Research Topics:   Automatic Pallet Detection,   Remote Control of Autonomous Forklift Robots</li> </ul> </li> <li>VINCI 7D Functional Print   (September 2020 - August 2021)<ul> <li>ID: POCI-01-0247-FEDER-045102</li> <li>Research Topics:   Gerber File Parsers,   2D-3D Projection of Electronic Circuits and Decorations</li> </ul> </li> </ul> <p>See more in Projects.</p>"},{"location":"cv/#publications","title":"Publications","text":"<p>Sousa, R.B., Sobreira, H.M., &amp; Moreira, A.P. (2023). A systematic literature review on long-term localization and mapping for mobile robots. Journal of Field Robotics, 40(5):1245-1322. DOI: 10.1002/rob.22170</p> <p>Sousa, R.B., Petry, M.R., Costa, P.G., &amp; Moreira, A.P. (2022). OptiOdom: a Generic Approach for Odometry Calibration of Wheeled Mobile Robots. Journal of Intelligent &amp; Robotic Systems, 105(39). DOI: 10.1007/s10846-022-01630-3</p> <p>Sousa, R.B., Rocha, C.D., Mendon\u00e7a, H.S., Moreira, A.P., &amp; Silva, M.F. (2022). Gerber File Parsing for Conversion to Bitmap Image - The VINCI7D Case Study. IEEE Access, 10:69659-69679. DOI: 10.1109/ACCESS.2022.3187042</p> <p>Sousa, R.B., Costa, P.G., &amp; Moreira, A.P. (2021). A Pose Control Algorithm for Omnidirectional Robots. In: 2021 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC), pp. 91-96. DOI: 10.1109/ICARSC52212.2021.9429803</p> <p>See more in Publications.</p>"},{"location":"cv/#awards","title":"Awards","text":"<p>Best Paper Award for the work A Robotic Framework for the Robot@Factory 4.0 Competition at the 2024 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC), Paredes de Coura, Portugal, May 2024.</p> <p>1<sup>st</sup> and 2<sup>nd</sup> places at the Robot@Factory 4.0 competition of the Portuguese Robotics Open (FNR) 2023, Tomar, Portugal, May 2023.</p> <p>1<sup>st</sup> place at the Robot@Factory 4.0 competition of the Portuguese Robotics Open (FNR) 2022, Santa Maria da Feira, Aveiro, Portugal, May 2022.</p> <p>ABB 2020 Award relative to the M.Sc. thesis with the best classification developed on one of the following themes: Renewable Energies, Industrial Automation, or Robotics.</p> <p>See more in Awards.</p>"},{"location":"open-source/","title":"Open-Source","text":""},{"location":"open-source/#a-robotic-framework-for-the-robotfactory-40-competition","title":"A Robotic Framework for the Robot@Factory 4.0 Competition","text":"<p>Robotic competitions stand as platforms to propel the forefront of robotics research while nurturing STEM education, serving as hubs of both applied research and scientific innovation. In Portugal, the Portuguese Robotics Open (FNR) is an event with several robotic competitions, including the Robot@Factory 4.0 competition. This competition presents an example of deploying autonomous robots on a factory shop floor. Thus, this framework intended for the Robot@Factory 4.0 competition is modular and open-access, enabling future participants to use and improve it in future editions. This work is the culmination of all the knowledge acquired by the 5dpo Robotics Team by winning the 2022 and 2023 editions of the competition.</p> <p>Links:</p> <ul> <li>GitHub: 5dpo/5dpo_ratf_2023</li> <li>DOI: 10.1109/ICARSC61747.2024.10535935</li> <li>Preprint: 10.13140/RG.2.2.29701.77283</li> </ul> <p>Citation:</p> <p>Sousa, R.B., Rocha, C.D., Martins, J.G., Costa, J.P., Padr\u00e3o, J.T., Sarmento, J.M., Carvalho, J.P., Lopes, M.S., Costa, P.G., &amp; Moreira, A.P. (2024). A Robotic Framework for the Robot@Factory 4.0 Competition. In: 2024 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC), pp. 66-73. DOI: 10.1109/ICARSC61747.2024.10535935</p>"},{"location":"open-source/#line-fitting-based-corner-like-detector-for-2d-laser-scanners-data","title":"Line Fitting-Based Corner-Like Detector for 2D Laser Scanners Data","text":"<p>The extraction of geometric information from the environment may be of interest to localisation and mapping algorithms. This feature extraction algorithm is intended to detect corner-like points in the 2D laser scan. The proposed methodology defines arrival and departure neighbourhoods around each scan point and performs local line fitting evaluated in multiple distance-based scales. Then, a set of indicators based on line fitting error, the angle between arrival and departure lines, and consecutive observation of the same keypoint across different scales determine the existence of a corner-like feature. The experiments evaluated the corner-like features regarding their relative position and observability, achieving standard deviations on the relative position lower than the sensor noise and visibility ratios higher than 75% with very low false positives rates.</p> <p>Links:</p> <ul> <li>GitHub: mrdt/open-source/inesctec_mrdt_line_fit_based_corner_detector_2d_laser</li> <li>DOI: N/A</li> <li>Preprint: 10.13140/RG.2.2.11269.32480</li> </ul> <p>Citation:</p> <p>Sousa, R.B., Sobreira, H.M., Silva, M.F., &amp; Moreira, A.P. (2024). Line Fitting-Based Corner-Like Detector for 2D Laser Scanners Data. In: 11<sup>th</sup> International Conference on Automation, Robotics, and Applications (ICARA), in press. DOI: N/A</p>"},{"location":"open-source/#optiodom-a-generic-approach-for-odometry-calibration-of-wheeled-mobile-robots","title":"OptiOdom: A Generic Approach for Odometry Calibration of Wheeled Mobile Robots","text":"<p>Odometry calibration adjusts the kinematic parameters or directly the robot's model to improve the wheeled odometry accuracy. The OptiOdom calibration algorithm, generalises the odometry calibration problem. It is developed an optimisation-based approach that uses the improved Resilient Propagation without weight-backtracking (iRprop-) for estimating the kinematic parameters using only the position data of the robot. Even though a calibration path is suggested to be used in the calibration procedure, the OptiOdom method is not path-specific. In the experiments performed, the OptiOdom was tested using four different robots on a square, arbitrary, and suggested calibration paths. The OptiTrack motion capture system was used as a ground-truth. Overall, the use of OptiOdom led to improvements in the odometry accuracy (in terms of maximum distance and absolute orientation errors over the path) over the existent literature while being a generalised approach to the odometry calibration problem. The OptiOdom and the methods from the literature implemented in the article are available in GitHub as an open-source repository.</p> <p>Links:</p> <ul> <li>GitHub: sousarbarb/optiodom</li> <li>DOI: 10.1007/s10846-022-01630-3</li> <li>Preprint: 10.13140/RG.2.2.22803.35364</li> </ul> <p>Citation:</p> <p>Sousa, R.B., Petry, M.R., Costa, P.G., &amp; Moreira, A.P. (2022). OptiOdom: a Generic Approach for Odometry Calibration of Wheeled Mobile Robots. Journal of Intelligent &amp; Robotic Systems, 105(39). DOI: 10.1007/s10846-022-01630-3</p>"},{"location":"projects/","title":"Projects","text":""},{"location":"projects/#5g-digital-transformation-test-bed","title":"5G &amp; Digital Transformation Test Bed","text":"<p>(ongoing)</p> <p>The 5G &amp; Digital Transformation Test Bed is constituted by a consortium composed of NOS, Centro Hospitalar Universit\u00e1rio S\u00e3o Jo\u00e3o (CHUSJ), and SONAE MC, with INESC TEC, 4LifeLab, CEiiA and Ericsson as partners. This test bed aimed to the acceleration of the country's digital transition process and 5G adoption, bringing verticals closer to the new mobile network. As a partner, INESC TEC was responsible for launching pilot initiatives that demonstrated the capabilities of the adoption of 5G networks.</p> <p>My participation was in the development of an MQTT-ROS bridge that allows the remote control of Autonomous Mobile Robots (AMR). This participation included also the supervision on the contributions of the tele-control system of AMRs over 5G networks.</p> <p>Link: https://transparencia.gov.pt/en/fundos-europeus/prr/beneficiarios-projetos/projeto/03/C16-i02/2022.PC651590110-00000107/</p>"},{"location":"projects/#greenauto-green-innovation-for-the-automotive-industry","title":"GreenAuto: Green innovation for the Automotive Industry","text":"<p>(ongoing)</p> <p>The GreenAuto agenda focused in transforming the national automotive sector of Portugal, in the scope of the current transition to low emission vehicles. The agenda intended to create the technical and operational conditions for Peugeot Citro\u00ebn Autom\u00f3veis Portugal,  S.A. to start the production of a new light commercial vehicle (LCV)  in Portugal, namely a battery electric light commercial vehicle (BE-LCV), with the collaboration of the agenda promotors, including industrial and Research &amp; Innovation (R&amp;I) entities. The INESC TEC participation was in the scope of the Work Package (WP) 10 Automated logistics for the automotive industry, more specifically, in the Product, Processes, or Services (PPS) 18 - 3D navigation system for mobile robotic equipment. This PPS's partners included Flowbotic Mobile Systems, Lda, a company that designs and manufactures autonomous mobile robots.</p> <p>My participation in this project has mainly been in researching new techniques to achieve long-term operation of autonomous mobile robots, including the topics of Simultaneous Localisation and Mapping (SLAM) and automatic calibration of sensory systems. Furthermore, other contributions include application of 3D localization and mapping systems (working with LiDAR sensors such as RoboSense RS-HELIOS 5515 and Livox Mid-360) and project management. Lastly, my participation also included the supervision of the R&amp;D work on automatic pallet and mettalic boxes detection.</p> <p>Link: https://transparencia.gov.pt/en/fundos-europeus/prr/beneficiarios-projetos/projeto/02/C05-i01.02/2022.PC644867037-00000013/</p>"},{"location":"projects/#produtech-r3-recovery-resilience-reindustrialisation-production-technologies-cluster-mobilising-agenda-for-reindustrialisation","title":"PRODUTECH R3 (Recovery-Resilience-Reindustrialisation): Production Technologies Cluster Mobilising Agenda for Reindustrialisation","text":"<p>(ongoing)</p> <p>The PRODUTECH R3 agenda aimed to reduce the external dependence on technologies and solutions for productive systems in the Portugal's production sector, in order to retain in the country an increasing share of the added value generated by the production value chains. Consequently, AIMMAP and the PRODUTECH Cluster launched a comprehensive set of projects and initiatives aimed to develop the production sector and, simultaneously, contribute to the Produgal's national industry. Several R&amp;D centres from INESC TEC participated in the project. The CRIIS - Centre for Robotics in Industry and Intelligent Systems participated in the Work Packages (WP) 6, FlexibleRoboticSolutions - Intelligent, Compact and Flexible End of Line Robotic Solutions, and 9, SmartIL - Intelligent interoperable robotic intralogistics and quality control platform and solutions for industry. These WPs resulted on the demonstration of the R&amp;D results in several Product, Processes, or Services (PPS), including the collaboration the main industrial partner JPM Industry responsible for the development of the robotic intralogistics solutions.</p> <p>My participation in this project included the development of a CANopen driver, leveraging the existing library kacanopen to communicate with the drivers of the motors (wheel velocity control for differential robots, position reference for trycicle robots and forklifts). Additionally, my participation also included the supervision of the R&amp;D work on remote control of Autonomous Mobile Robots (AMR), considering both 5G and Wi-Fi network configurations, and automatic pallet detection for autonomous forklifts.</p> <p>Link: https://transparencia.gov.pt/en/fundos-europeus/prr/beneficiarios-projetos/projeto/02/C05-i01.01/2022.PC645808870-00000067/</p>"},{"location":"projects/#vinci-7d-functional-print","title":"VINCI 7D Functional Print","text":"<p>(September 2020 - August 2021)</p> <p>INESC TEC participated in this project through a contract celebrated with the company Rui Azevedo - Solu\u00e7\u00f5es de Acabamentos e Tampografia. The context of this project was the automotive industry. The VINCI 7D consortium intended to innovate in the industrial process of printing in three-dimensional parts, adopting more automatic and robotic mechanisms, and less dependent on manual processes and mechanical setups. In addition, it was intended to promote the implementation of a technology that allows the innovation of multi-ink printing parts, allowing the creation of sensors and actuators on its surface (e.g., having a car dash with components printed on its surface, instead of mounting and fixing them).</p> <p>The main responsability of INESC TEC was the 2D to 3D projection of electronic circuits and/or decorations. The company Rui Azevedo - Solu\u00e7\u00f5es de Acabamentos e Tampografia established that all electronic circuits and/or decorations should be described by Gerber files (traditionally used in printed circuit boards' industry). Therefore, my main contribution for this project was the development of a Gerber parser compatible with the Gerber X2 standard to convert the text file into a bitmap image (DOI: 10.1109/ACCESS.2022.3187042). This parser implemented a recursive descendent approach to interpret the Gerber commands and, consequently, to generate the parsing tree. The bitmap generation leveraged from the drawing functions available in the OpenCV library. Although the bitmap image could have been used for an inkjet approach to generate both the robotic manipulator trajectories and the pulses for the printing head, the company decided to prefer a plotter-like approach. This decision led to my smaller contribution of developing a second version of the parser to also consider the parametric definitions of the graphical contents described in the Gerber file, to allow the correct generation of the plotter-like trajectories.</p> <p>Link: https://www.inesctec.pt/en/projects/vinci7d</p>"},{"location":"publications/","title":"Publications","text":""},{"location":"publications/#journal-articles","title":"Journal articles","text":"<p>Sousa, R.B., Sobreira, H.M., &amp; Moreira, A.P. (2023). A systematic literature review on long-term localization and mapping for mobile robots. Journal of Field Robotics, 40(5):1245-1322. [doi] [github] [preprint]</p> <p>Sousa, R.B., Petry, M.R., Costa, P.G., &amp; Moreira, A.P. (2022). OptiOdom: a Generic Approach for Odometry Calibration of Wheeled Mobile Robots. Journal of Intelligent &amp; Robotic Systems, 105(39). [doi] [github] [preprint] [wiki]</p> <p>Sousa, R.B., Rocha, C.D., Mendon\u00e7a, H.S., Moreira, A.P., &amp; Silva, M.F. (2022). Gerber File Parsing for Conversion to Bitmap Image - The VINCI7D Case Study. IEEE Access, 10:69659-69679. [doi] [github]</p> <p>Soares, I., Sousa, R.B., Petry, M.R., &amp; Moreira, A.P. (2021). Accuracy and Repeatability Tests on HoloLens 2 and HTC Vive. Multimodal Technologies and Interaction, 5(8):47. [doi] [preprint]</p>"},{"location":"publications/#conference-papers","title":"Conference papers","text":"<p>Lopes, M.S., Ribeiro, J.D., Moreira, A.P., Rocha, C.D., Martins, J.G., Sarmento, J.M., Carvalho, J.P., Costa, P.G., &amp; Sousa, R.B. (2025). From Competition to Classroom: A Hands-on Approach to Robotics Learning. In: 2025 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC), pp. 170-176. Madeira, Portugal. [doi] [github] [preprint]</p> <p>Pacheco, F.D., Rebelo, P.M., Sousa, R.B., Silva, M.F., &amp; Mendon\u00e7a, H.S. (2025). Integrated RFID System for Intralogistics Operations with Industrial Mobile Robots. In: 2025 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC), pp. 124-131. Madeira, Portugal. [doi] [gitlab] [preprint]</p> <p>Sousa, R.B., Sobreira, H.M., Martins, J.G., Costa, P.G., Silva, M.F., &amp; Moreira, A.P. (2025). Integrating Multimodal Perception into Ground Mobile Robots. In: 2025 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC), pp. 104-111. Madeira, Portugal. [doi] [github] [preprint] [website]</p> <p>Caldana, D., Cordeiro, A., Souza, J.P., Sousa, R.B., Rebelo, P.M., Silva, A.J., &amp; Silva, M.F. (2024). Pallet and Pocket Detection Based on Deep Learning Techniques. In: 2024 7<sup>th</sup> Iberian Robotics Conference (ROBOT), pp. 1-8. Madrid, Spain. [doi] [preprint]</p> <p>Levin, T.B., Oliveira, J.M., Sousa, R.B., Silva, M.F., Parreira, B.S., Sobreira, H.M., &amp; Mendon\u00e7a, H.S. (2024). Image and Command Transmission Over the 5G Network for Teleoperation of Mobile Robots. In: 2024 7<sup>th</sup> Iberian Robotics Conference (ROBOT), pp. 1-8. Madrid, Spain. [doi] [preprint]</p> <p>Sousa, R.B., Rocha, C.D., Martins, J.G., Costa, J.P., Padr\u00e3o, J.T., Sarmento, J.M., Carvalho, J.P., Lopes, M.S., Costa, P.G., &amp; Moreira, A.P. (2024). A Robotic Framework for the Robot@Factory 4.0 Competition. In: 2024 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC), pp. 66-73. Paredes de Coura, Portugal. [doi] [github] [preprint]</p> <p>Sousa, R.B., Sobreira, H.M., Silva, M.F., &amp; Moreira, A.P. (2024). Line Fitting-Based Corner-Like Detector for 2D Laser Scanners Data. In: 2024 10<sup>th</sup> International Conference on Automation, Robotics and Applications (ICARA), pp. 210-216. Athens, Greece. [doi] [gitlab] [preprint]</p> <p>Sousa, R.B., Costa, P.G., &amp; Moreira, A.P. (2021). A Pose Control Algorithm for Omnidirectional Robots. In: 2021 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC), pp. 91-96. Santa Maria da Feira, Portugal (remote). [doi]</p> <p>Sousa, R.B., Petry, M.R., &amp; Moreira, A.P. (2021). Extrinsic Sensor Calibration Methods for Mobile Robots: A Short Review. In: CONTROLO 2020. CONTROLO 2020. Lecture Notes in Electrical Engineering, vol. 695, pp. 559-569. Bragan\u00e7a, Portugal (remote). [doi]</p> <p>Sousa, R.B., Petry, M.R., &amp; Moreira, A.P. (2020). Evolution of Odometry Calibration Methods for Ground Mobile Robots. In: 2020 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC), pp. 294-299. Ponta Delgada, Portugal (remote). [doi]</p>"},{"location":"publications/#conference-posters","title":"Conference posters","text":"<p>Couto, M.B., Petry, M.R., Levin, T.B., Oliveira, J.M., Sousa, R.B., Rebelo, P.M., &amp; Sobreira, H.M. (2024). High-level teleoperation system for autonomous forklifts using VR over the 5G public network. In: 27<sup>th</sup> International Conference Series on Climbing and Walking Robots and the Support Technologies for Mobile Machines (CLAWAR). Kaiserslautern, Germany. [url]</p> <p>Matos, D.M., Costa, P.G., Sousa, R.B., Rebelo, P.M., Sobreira, H.M., Silva, M.F., Mendes, A., &amp; Martins, N. (2024). The GreenAuto mobile robots fleet management and scheduling system. In: 27<sup>th</sup> International Conference Series on Climbing and Walking Robots and the Support Technologies for Mobile Machines (CLAWAR). Kaiserslautern, Germany. [url]</p> <p>Rebelo, P.M., Sousa, R.B., Sobreira, H.M., Caldana, D., Couto, M.B., Petry, M.R., Silva, M.F. Ramos, D., Silva, G., Duarte, M., Be\u00e7a, J.A., Silva, P.M., Ribeiro, F., &amp; Mendes, A. (2024). PRODUTECH R3 Project Overview - From AMRs to AI and the Digital Twin. In: 2024 7<sup>th</sup> Iberian Robotics Conference (ROBOT). Madrid, Spain. [url]</p> <p>Sousa, R.B., Matos, D.M., Sobreira, H.M., Rebelo, P.M., Caldana, D., Cordeiro, A., Souza, J.P., Silva, M.F., Costa, P.G., Mendes, A., &amp; Martins, N. (2024). The GreenAuto autonomous solutions for intralogistics operations. In: 2024 7<sup>th</sup> Iberian Robotics Conference (ROBOT). Madrid, Spain. [url]</p> <p>Silva, M.F., Sousa, R.B., Matos, D.M., Rebelo, P.M., Costa, P.G., Caldana, D., Sobreira, H.M., Mendes, A., &amp; Martins, N. (2023). The GreenAuto 3D navigation system for mobile robots. In: 2023 6<sup>th</sup> Iberian Robotics Conference (ROBOT). Coimbra, Portugal. [url]</p> <p>Silva, M.F., Rebelo, P.M., Sousa, R.B., Sobreira, H.M., &amp; Mendes, A. (2023). High-Level Teleoperation System for Autonomous Stackers. In: European Robotics Forum 2023. Odense, Denmark. [url]</p>"},{"location":"publications/#theses","title":"Theses","text":"<p>Sousa, R.B. (2020). Odometry and Extrinsic Sensor Calibration on Mobile Robots. M.Sc. Thesis in Electrical and Computers Engineering (ECE) at the Faculty of Engineering, University of Porto (FEUP). [url]</p>"},{"location":"research/","title":"Researching","text":"<p>TBC</p>"},{"location":"research/#simultaneous-localization-and-mapping-slam","title":"Simultaneous Localization and Mapping (SLAM)","text":""},{"location":"research/#odometry-and-extrinsic-sensor-calibration-on-mobile-robots","title":"Odometry and extrinsic sensor calibration on mobile robots","text":""},{"location":"robotics/","title":"Robotics","text":"<p>TBC</p>"},{"location":"teaching/","title":"Teaching","text":""},{"location":"teaching/#industrial-informatics-msc-in-ece-feup","title":"Industrial Informatics (MSc in ECE @ FEUP)","text":"<p>This course focused on enabling the students to analyse, design, implement, and document industrial control systems, using domain specific modelling tools (GRAFCET) and programming languages (IEC 61131-3 and IEC 61499). The course program included programming industrial systems using IEC 61131-3 (using programming languages such as sequential function charts, functional block diagrams), UML modelling, design patterns, and technologies for industrial integration (XML, OPC-UA). In the laboratory classes, the students were required to develop an industrial control system composed by three subsystems: the factory automation level using the Codesys soft-PLC, the Manufacturing Execution System (MES) to schedule the daily production of the factory and supervise the production statistics, and the Enterprise Resource Planning (ERP) to receive the client orders and compute the long-term sceduling of the production (decouple client orders into parts production, handling suppliers' orders, and dispatch the orders deliveries). Although the communication between PLC and MES was forced to be OPC-UA, the students could choose any other technology and communication protocol between the MES and ERP.</p> <p>My participation in lecturing the laboratory classes of the Industrial Informatics course was mainly on project supervision, helping the students to elaborate the architecture for their industrial control system, while also contributing on small development examples (e.g., usage of OPC-UA with Codesys).</p>"},{"location":"teaching/#software-design-msc-in-ece-feup","title":"Software Design (MSc in ECE @ FEUP)","text":"<p>This course focused on teaching software engineering concepts, methods, and techniques to enable students to apply them in the design and development of software systems. The students were required to choose a software engineering project during all the semester. This project had to satisfy two of the following three requirements: information system (database), Graphical User Interfaces (GUI), and/or client-server architecture. Any programming language could be used to develop the project, even though we advised the students to use either C++ or Java, in order to guarantee some support in terms of the implementation throughout the development. The expected learning outcomes and competences for the students after finishing the Software Design were the following ones: formulation of a product vision, identification and documentation of a software system's requirements using user stories, UML modelling (use cases, class, sequence, and components diagrams, among others), unit tests, use of version control systems (e.g., Git), project management, and plan, estimation, and management of an agile software development process.</p> <p>My participation in lecturing the laboratory classes of the Software Design course included the following contributions: fully documented examples of how to configure the C++ and Java development environment in Linux and Windows (in the case of C++, using different compilation tools: make, CMake, and even with the JSON tasks of Visual Studio Code), program examples with implementations of GUIs (Qt) and database connection (PostgreSQL), unit test examples using the GTest portable framework, and project supervision during the semester.</p>"},{"location":"tools/","title":"Tools","text":"<p>The main goal for the existence of this page is to have a personal record of tools used and/or still using through my life. Although I have tried to create git repositories to gather some information, sometimes it may be difficult to maintain several separate repositories of information and/or code. Thus, this page is a centralisation of knowledge gained throughout different academic and professional experiences. Hope it may be of some use for you.</p> <p>See the left-side navigation bar to see which tools I have reported in this website...</p>"},{"location":"tools/git/","title":"Git","text":""},{"location":"tools/git/#getting-started","title":"Getting Started","text":""},{"location":"tools/git/#installation","title":"Installation","text":"<pre><code>sudo apt update\nsudo apt dist-upgrade\n\nsudo apt install git\n\ngit --version\ngit --help\n</code></pre>"},{"location":"tools/git/#gui-clients","title":"GUI Clients","text":"<ul> <li>GitKraken</li> <li>Git source control in VS Code</li> </ul> <p>Note: personally, I prefer to use the Command-Line Interface (CLI) of git, to better understand how the workflow of managing git repositories work. Still, GUI clients can be of great help to visualise the Git branch tree, manage tags/submodules, while giving a more graphic perspective of the repositories' state.</p>"},{"location":"tools/git/#useful-links","title":"Useful Links","text":"<ul> <li>Git</li> <li>Pro Git book</li> <li>Git Cheat Sheet<ul> <li>GitHub</li> <li>GitLab</li> <li>Atlassian</li> <li>Note: does not matter by which git cheat sheet you follow, but either of   them are a very quick way to known the main git CLI commands and the   respective usage</li> </ul> </li> <li>Agile Git<ul> <li>How to use GitLab for Agile software development (GitLab)</li> <li>Agile Git branching strategies in 2023 (Medium)</li> <li>Learn how Git fits into an agile workflow (Atlassian)</li> </ul> </li> <li>Open Source Guides</li> <li>Tutorials<ul> <li>Git by Andr\u00e9 Restivo</li> <li>Hello World</li> <li>Getting Git Right (Atlassian)</li> <li>Interactive Learning<ul> <li>Learn Git Branching</li> <li>Visualizing Git</li> </ul> </li> </ul> </li> </ul>"},{"location":"tools/git/#version-control-system-vcs","title":"Version Control System (VCS)","text":"<ul> <li>VCS allows to:<ul> <li>Record changes made to a file(s) over time</li> <li>Revert selected files / entire project back to a previous state</li> <li>Compare changes between versions</li> <li>See who modified something</li> <li>...</li> </ul> </li> <li>Source Control Management (SCM): track modifications made to a source code   repository<ul> <li>Track all changes made to a project over time</li> <li>Detailed historical record of the project</li> </ul> </li> </ul>"},{"location":"tools/git/#local-vcs","title":"Local VCS","text":"<ul> <li>Simple database that keeps all the changes to files under revision control</li> <li>Version management of all files only within the local system (no remote   server)</li> <li>Most local VCSs store only the difference patches between files instead of   copies of each version   (then, they can recreate any file at any point in time by adding up all the   patches)</li> <li>Examples: Revision Control System (RCS),   Source Code Control System (SCCS)</li> </ul> <pre><code>flowchart TB\nsubgraph Local\n    subgraph Version Database\n    v1--&gt;v2\n    v2--&gt;v3\n    end\nv3--&gt;file\nend\n</code></pre>"},{"location":"tools/git/#centralised-vcs","title":"Centralised VCS","text":"<ul> <li>Single server that contains all the versioned files</li> <li>Users checkout a particular version of the files from the central place</li> <li>Advantages:<ul> <li>Everyone knows what everyone is doing (offers full visibility into what   code is currently worked on)</li> <li>Fine-grained control over who can do what</li> <li>Easier to administer a CVCS compared to local databases</li> </ul> </li> <li>Disadvantages:<ul> <li>Single point of failure</li> <li>Requires constant connectivity<ul> <li>If the server is down, nobody can collaborate at all or save versioned   changes</li> <li>Slow speed delays development (difficult time branching the version   tree and dealing with merge conflicts)</li> </ul> </li> <li>Backups are mandatory (if storage of the central database becomes corrupt   without any backups, entire history of the project would be lose, except   for whatever single snapshots people happen to have in their local   machines)</li> </ul> </li> <li>Examples: Concurrent Versions System (CVS),   Subversion,   Perforce</li> </ul> <pre><code>flowchart TB\nsubgraph Central VCS\n    subgraph Version Database\n    v1--&gt;v2\n    v2--&gt;v3\n    end\nend\nsubgraph Computer A\n    v3--&gt;file_in_A\nend\nsubgraph Computer B\n    v3--&gt;file_in_B\nend\n</code></pre>"},{"location":"tools/git/#distributed-vcs","title":"Distributed VCS","text":"<ul> <li>All clients fully mirror the repository, including its full history<ul> <li>If any server dies, any of the client repositories can be copied back to   the server to restore it</li> <li>Every clone is a full backup of all the data</li> </ul> </li> <li>No difference between a server and a client (but one or more computers can be   used as a central point of synchronisation)</li> <li>Allows lots of different workflows<ul> <li>Work well with having several remote repositories they can work with</li> <li>E.g., hierarchical model of repositories</li> </ul> </li> <li>Examples: Git,   Mercurial,   Bazaar,   BitKeeper,   Darcs,   Fossil</li> </ul> <pre><code>flowchart TB\nsubgraph Computer B\n    subgraph Version Database Computer B\n        cb_v1--&gt;cb_v2\n        cb_v2--&gt;cb_v3\n    end\nend\nsubgraph Computer A\n    subgraph Version Database Computer A\n        ca_v1--&gt;ca_v2\n        ca_v2--&gt;ca_v3\n    end\nend\nsubgraph Server\n    subgraph Version Database Server\n        s_v1--&gt;s_v2\n        s_v2--&gt;s_v3\n    end\nend\n</code></pre>"},{"location":"tools/git/#git-basics","title":"Git Basics","text":"<ul> <li>Snapshots, Not Differences<ul> <li>Most other VCS systems store information as a list of file-based changes   (aka, delta-based version control)</li> <li>Git thinks of its data as a series of snapshots of a miniature filesystem<ul> <li>Every time you commit, Git basically takes a picture of what all the   files look like at that moment and stores a reference to that snapshot</li> <li>In order to be efficient, Git does not store the file again if its   contents have not changed, only saves a link to the previous identical   file it has already stored</li> </ul> </li> </ul> </li> <li>Nearly Every Operation is Local<ul> <li>Browsing the repository history</li> <li>Commit changes to the repository locally, then upload them to the remote   server when possible</li> </ul> </li> <li>Data Integrity<ul> <li>Everything in Git is checksummed before it is stored using SHA-1 hashes</li> <li>Git stores everything in its database not by file name but by the hash   value / checksum of its contents</li> <li>Example: <code>c9962192f9a359d450cebab57752bdf75003a532</code>   (contents of the file <code>.git/refs/heads/main</code> that represents the current   commit of the repository)</li> </ul> </li> </ul>"},{"location":"tools/git/#git-areas","title":"Git Areas","text":"<ul> <li>Working directory: directory in the local file system that is associated   with a Git repository</li> <li>Staging area: index file, generally contained in the Git directory, that   stores information about what will go into the next commit</li> <li><code>.git</code> directory (repository) :   directory inside the working repository</li> </ul>"},{"location":"tools/git/#file-states","title":"File States","text":"<ul> <li>Untracked: files that exist in the working directory but has not been   added to the repository's database</li> <li>Modified: changed files but not yet committed to the repository's database</li> <li>Staged: modified files marked to go into the next commit snapshot</li> <li>Committed: data safely stored in the local database</li> </ul>"},{"location":"tools/git/#basic-git-workflow","title":"Basic Git Workflow","text":"<ol> <li>Checkout the project (<code>.git</code> &gt;&gt;&gt; Working directory)</li> <li>Modify the files in your work tree</li> <li>Stage just the changes you want to be part of the next commit, adding only    those changes to the staging area (Working directory &gt;&gt;&gt; Staging area)</li> <li>Commit the staged files and store the corresponding snapshot permanently to    your Git directory (Staging area &gt;&gt;&gt; <code>.git</code>)</li> </ol>"},{"location":"tools/git/#git-setup","title":"Git Setup","text":""},{"location":"tools/git/#local-configuration","title":"Local Configuration","text":"<ul> <li><code>git config</code> sets the configuration variables that control all aspects of how   Git works:<ul> <li><code>[path]/etc/gitconfig</code> (applicable to every user on the system and all   repositories)</li> <li><code>~/.gitconfig</code> or <code>~/.config/git/config</code> (values specific to the user)</li> <li><code>[repository path]/.git/config</code> (configuration specific to the local   repository)</li> <li>View all settings and where they are comming from using:   <code>git config --list --show-origin</code></li> </ul> </li> </ul> <pre><code>git config --global user.name \"John Doe\"\ngit config --global user.email johndoe@example.com\ngit config --global core.editor vim\ngit config --global merge.tool vimdiff\n</code></pre>"},{"location":"tools/git/#ssh-keys","title":"SSH Keys","text":"<p>Nowadays, most of Git remote servers, such as GitHub or GitLab, require SSH keys for authentication, enabling remote Git operations over SSH.</p> <pre><code>ssh-keygen -t ed25519 -C \"johndoe@exaxmple.com\" -f ~/.ssh/github  # create SSH key\neval $(ssh-agent -s)                                              # start ssh-agent\nssh-add ~/.ssh/github                                             # add SSH private key to the ssh-agent\ncat ~/.ssh/github.pub | xclip -selection clipboard                # copy the public key and add to your account\n</code></pre> <p>After adding the SSH to your GitHub and/or GitLab account(s), you may test the SSH key with the following commands:</p> <pre><code>ssh -T git@github.com\nssh -T git@gitlab.com\n</code></pre> <p>Usually, only one SSH key is need to use in the different Git remote servers. However, if you need to use multiple SSH keys and have problems with the authentication, you can create an SSH config file as follows:</p> <pre><code>touch ~/ssh/config &amp;&amp; vim ~/ssh/config\n</code></pre> <p>SSH client configuration file</p> <pre><code>Host GitHub github.com\n  HostName github.com\n  IdentityFile ~/.ssh/GitHub\n  User sousarbarb\n\nHost GitLab gitlab.com\n  HostName gitlab.com\n  IdentityFile ~/.ssh/GitLab\n  User sousarbarb\n\nHost GitLabINESCTEC gitlab.inesctec.pt\n  HostName gitlab.inesctec.pt\n  IdentityFile ~/.ssh/GitLabINESCTEC\n  User ricardo.b.sousa\n</code></pre> <p>See the How To Configure Custom Connection Options for your SSH Client tutorial for further information on this topic.</p>"},{"location":"tools/git/#git-local","title":"Git Local","text":""},{"location":"tools/git/#create-a-repository","title":"Create a Repository","text":"<p>This creates an empty Git repository, basically a new subdirectory named <code>.git</code> that contains all necessary files to have a Git repository.</p> <pre><code>mkdir myproject &amp;&amp; cd myproject\ngit init\ngit checkout -b main\n</code></pre>"},{"location":"tools/git/#add","title":"Add","text":"<p>Add content from the working directory into the staging area (or \"index\") for the next commit.</p> <pre><code>echo \"Hello World to Git\" &gt; README\ncat README\n\ngit status\ngit add README  # or --all flag to stage all untracked OR modified files\ngit status\n</code></pre> <p>Also, you can add directories (<code>git add doc/</code>), specific files (<code>git add README CONTRIBUTING</code>), and use wildcards (<code>git add src/*.cpp</code>).</p> <pre><code># Open and edit again the README file in several lines\nvim README\n\n# Exexcute the git add --interactive mode to stage specific patches\ngit add --patch\n</code></pre>"},{"location":"tools/git/#commit","title":"Commit","text":"<p>Make a commit, capturing a snapshot of the project's currently staged changes, while associating to the commit a log message.</p> <pre><code>git status --short\ngit commit -m \"First commit\"\n</code></pre> <p>If you use <code>git commit</code>, Git opens your local code editor set in <code>core.editor</code> configuration variable to add a short message and a longer one. Additionally, you can stage and commit modified files (that are already tracked by the Git database) automatically using <code>git commit -a -m \"&lt;log message&gt;\"</code>.</p>"},{"location":"tools/git/#history","title":"History","text":"<p>We can see by whom and when each commit was made, the commit message, and also the SHA-1 hash of each commit. Note that the author information is identified by the information set by the corresponding user with the <code>git config</code> command.</p> <pre><code>git log                   # commit history of the repository\ngit log --oneline         # simplified history\ngit log --oneline -1      # limit number of entries\ngit log -1 -p             # show the difference introduced in each commit\ngit log --stat            # see some abbreviated stats for each commit\ngit log --pretty=oneline  # prints each commit on a single line\n</code></pre>"},{"location":"tools/git/#show-changes","title":"Show Changes","text":"<p>Show changes between the working directory and the index or the repository tree.</p> <pre><code>vim README\n\ngit diff\n\ngit add README\ngit diff --staged\n</code></pre> <p>You can also see the changes between branches, between commits, among other possibilities.</p>"},{"location":"tools/git/#undoing-things","title":"Undoing Things","text":"<ul> <li>Add some files possibly forgotten from the last commit, or if the commit   message was messed up   <pre><code>git add REAME\ngit commit -m \"Update README\"\ngit add README\ngit commit --amend\n</code></pre></li> <li>Unstaging a staged file   <pre><code>git restore --staged &lt;file&gt;\ngit reset HEAD &lt;file&gt;\n</code></pre></li> <li>Unmodifying a modified file   <pre><code>git restore &lt;file&gt;\ngit checkout -- &lt;file&gt;\n</code></pre></li> </ul>"},{"location":"tools/git/#branching","title":"Branching","text":"<ul> <li>A branch in Git is simply a movable point to a commit</li> <li>Each time you commit to a branch, the pointer moves forward automatically</li> <li><code>HEAD</code> is a special pointer that always points to the current branch</li> </ul>"},{"location":"tools/git/#create-branches","title":"Create Branches","text":"<pre><code>git branch devel    # create a new devel branch\ngit branch          # list current branches\ngit checkout devel  # switch from current branch to devel\n\n# OR\ngit checkout -b devel   # create and checkout the new branch\n\ngit branch\ngit status\ngit log\n</code></pre>"},{"location":"tools/git/#deleting-branches","title":"Deleting Branches","text":"<pre><code>git branch -d devel   # only deletes the branch pointer, all commits remain\n</code></pre>"},{"location":"tools/git/#merging","title":"Merging","text":"<pre><code>git checkout main\ngit merge devel\n</code></pre> <ul> <li>Git uses two main strategies to merge branches:<ul> <li>Fast-forward merge: when there is no divergent work</li> <li>Three-way merge: when there is diverging work</li> </ul> </li> </ul>"},{"location":"tools/git/#basic-merge-conflicts","title":"Basic Merge Conflicts","text":"<p>Occasionally, the merge proccess does not go smoothly, if the same part of the same file was changed differently in the two branches that will be merged. Thus, in this specific case, Git does not create automatically a new merge commit. Instead, you may need to edit manually the conflicted file(s):</p> <pre><code>$ git status\nOn branch main\nYou have unmerged paths.\n  (fix conflicts and run \"git commit\")\n\nUnmerged paths:\n  (use \"git add &lt;file&gt;...\" to mark resolution)\n\n    both modified:      index.html\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n</code></pre> <ul> <li>File modified by Git upon the detection of a merge conflict:   <pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:index.html\n&lt;div id=\"footer\"&gt;contact : email.support@github.com&lt;/div&gt;\n=======\n&lt;div id=\"footer\"&gt;\nplease contact us at support@github.com\n&lt;/div&gt;\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; iss53:index.html\n</code></pre></li> <li>File after solving the merge conflict:   <pre><code>&lt;div id=\"footer\"&gt;\nplease contact us at email.support@github.com\n&lt;/div&gt;\n</code></pre></li> </ul> <p>This process of solving merge conflicts can be manually done by editing the file and choosing the final version. In alternative, you can use a merge conflict tool, such as Visual Studio Code or vimdiff.</p>"},{"location":"tools/git/#final-notes","title":"Final Notes","text":"<ul> <li>Commit often<ul> <li>Each commit is a snapshot that the codebase can be reverted to</li> <li>Frequent commits offer more opportunities to revert or undo work</li> <li>Group of commits can be combined into a single commit using a rebase   to clarify the development log</li> </ul> </li> <li>Ensure that you are working with the latest version   (multiple developers, each one with its local copy of the codebase)</li> <li>Make detailed notes</li> <li>Review changes before committing   (staging area can be used to manage and review the changes before doing a   commit)</li> <li>Use branches<ul> <li>Enable multiple developers to work in parallel on separate lines of   development</li> <li>When development is completed on a branch, then can be merged into the   main line of development</li> </ul> </li> <li>Agree on a workflow<ul> <li>Most VCSs / SCMs are agnostic to the methods of contribution</li> <li>Teams must establish shared patterns of collaboration</li> </ul> </li> </ul>"},{"location":"tools/docker/","title":"Docker","text":""},{"location":"tools/docker/#installation","title":"Installation","text":"<pre><code>sudo apt update\nsudo apt dist-upgrade -y\nsudo apt install ca-certificates curl -y\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release &amp;&amp; echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\nsudo apt update\nsudo apt dist-upgrade -y\n\nsudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-doc -y\n</code></pre>"},{"location":"tools/docker/#setup","title":"Setup","text":"<pre><code>sudo groupadd docker\nsudo usermod -aG docker $USER\n</code></pre>"},{"location":"tools/docker/#hello-world","title":"Hello World","text":"<pre><code>docker run hello-world\n</code></pre>"},{"location":"tools/docker/#visual-studio-code","title":"Visual Studio Code","text":""},{"location":"tools/docker/#requirements","title":"Requirements","text":"<ul> <li> Extensions    (Ctrl+Shift+X | File  Preferences     Extensions)<ul> <li> ms-azuretools.vscode-containers</li> <li> ms-azuretools.vscode-docker</li> <li> ms-vscode-remote.remote-containers</li> </ul> </li> </ul>"},{"location":"tools/docker/#container-tools","title":"Container Tools","text":"<ul> <li> Container Tools extension menu in the primary side bar   (Ctrl+B) makes it easy to build, manage, an deploy containers</li> <li>Container Explorer facilitates the management of container assets   (containers, images, volumes, networks)</li> </ul> <p>See more information on Containers in Visual Studio Code.</p>"},{"location":"tools/docker/#developing-inside-a-container","title":"Developing inside a Container","text":"<p>Source: https://code.visualstudio.com/docs/devcontainers/containers</p> <ul> <li>Setup a <code>devcontainer.json</code> dev container configuration file for your project,   either located under <code>.devcontainer/devcontainer.json</code> or as a   <code>.devcontainer.json</code> file (note the dot-prefix) in the project root</li> <li>Use the command (Ctrl+Shift+P <code>&gt;dev containers reopen</code>) Dev Containers: Reopen in Container to connect   with Visual Studio Code and start developing within the container</li> </ul> <p>Example docker-compose.yml<pre><code>services:\n  ubuntu24:\n    image: ubuntu:24.04\n    container_name: ubuntu24\n    volumes:\n      - ./shared_data:/home/ubuntu/shared_data\n    tty: true\n</code></pre></p> <ul> <li>Create a container based on the image from Ubuntu 24.04 LTS</li> <li>Link the folder <code>shared_data</code> present in your project's root directory to the   folder <code>/home/ubuntu/shared_data</code> inside the container</li> </ul> .devcontainer/devcontainer.json<pre><code>// For format details, see https://aka.ms/devcontainer.json. For config options, see the\n// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose\n{\n    // Name for the dev container. This is displayed in the VS Code UI.\n    \"name\": \"Example Dev Containers with Docker Compose\",\n    // Update the 'dockerComposeFile' list if you have more compose files or use different names\n    \"dockerComposeFile\": [\n        \"../docker-compose.yml\"\n    ],\n    // The 'service' property is the name of the service for the container that VS Code should use from the compose files.\n    // Update this value and .devcontainer/docker-compose.yml to the real service name\n    \"service\": \"ubuntu24\",\n    // The optional 'workspaceFolder' property is the path VS Code should open by default when connected.\n    // This is typically a file mount in .devcontainer/docker-compose.yml\n    \"workspaceFolder\": \"/home/ubuntu/shared_data/\",\n    // Features to add to the dev container. More info: https://containers.dev/features.\n    // \"features\": {},\n    // Use 'forwardPorts' to make a list of ports inside the container available locally.\n    // \"forwardPorts\": [],\n    // Uncomment the next line if you want start specific services in your Docker Compose config.\n    // \"runServices\": [],\n    // Uncomment the next line if you want to keep your containers running after VS Code shuts down.\n    \"shutdownAction\": \"stopCompose\",\n    // Command string or list of command arguments to run on the **host machine** during initialization\n    // \"initializeCommand\": [\n    //  \"echo 'Initializing the dev container...'\",\n    //  \"echo 'This is a placeholder for any initialization commands you might want to run.'\"\n    // ],\n    // Uncomment the next line to run commands after the container is created.\n    // Subsequent commands execute **inside the container** immediately after it has started for the first time\n    \"postCreateCommand\": \"cat /etc/os-release\",\n    // Configure tool-specific properties.\n    \"customizations\": {\n        \"vscode\": {\n            // Uncomment the next line to install VS Code extensions.\n            \"extensions\": [\n                \"ms-vscode.cpptools-extension-pack\",\n                \"ms-python.python\",\n                \"ms-python.debugpy\",\n                \"ms-python.vscode-pylance\",\n                \"cschlosser.doxdocgen\",\n                \"redhat.vscode-xml\",\n                \"redhat.vscode-yaml\",\n                \"tomoki1207.pdf\"\n            ]\n            // Uncomment the next line to set a specific VS Code version.\n            // \"vscodeVersion\": \"1.60.0\"\n        }\n    }\n    // Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.\n    // \"remoteUser\": \"devcontainer\"\n}\n</code></pre> <p>Warning</p> <p>If you try to remove files inside the shared folder between container and     host machine, the following error may appear: EACCES: permission denied. This error is due to the changes on the folder's privileges (<code>$ ll</code>). A solution is to remove the file with <code>sudo</code>, changing back the folder's     privileges, among others.</p> <p>See more information on Developing inside a Container in Visual Studio Code and Dev Container metadata reference.</p>"},{"location":"tools/docker/ros/","title":"Robot Operating System (ROS) and Docker","text":""},{"location":"tools/docker/ros/#dockerfiles","title":"Dockerfiles","text":""},{"location":"tools/docker/ros/#images","title":"Images","text":"<pre><code># ROS 1\ndocker pull osrf/ros:noetic-desktop\n\n# ROS 2\ndocker pull osrf/ros:foxy-desktop\ndocker pull osrf/ros:humble-desktop\ndocker pull osrf/ros:jazzy-desktop\ndocker pull osrf/ros:rolling-desktop\n\n# List local Docker images\ndocker images\n</code></pre>"},{"location":"tools/docker/ros/#dockerfile","title":"Dockerfile","text":"<ul> <li> ROS 2 Humble @ Jammy</li> </ul> <p>Example</p> <pre><code>FROM osrf/ros:humble-desktop\n\n# Set environment variables\nENV DEBIAN_FRONTEND=noninteractive\nENV ROS_DISTRO=humble\nENV USER=user\nENV HOME=/home/$USER\n\n# Install additional packages\nRUN apt-get update &amp;&amp; apt-get install -y \\\n  sudo \\\n  curl \\\n  wget \\\n  git \\\n  nano \\\n  neovim \\\n  python3-pip \\\n  python3-colcon-common-extensions \\\n  python3-rosdep \\\n  python3-vcstool \\\n  bash-completion \\\n  &amp;&amp; rm -rf /var/lib/apt/lists/*\n\n# Create user and home directory\nRUN useradd -m -d $HOME -s /bin/bash $USER &amp;&amp; \\\n  echo \"$USER:$USER\" | chpasswd &amp;&amp; \\\n  usermod -aG sudo $USER &amp;&amp; \\\n  echo \"$USER ALL=(ALL) NOPASSWD:ALL\" &gt;&gt; /etc/sudoers\n\n# ROS 2\nUSER $USER\nWORKDIR $HOME\n\nRUN mkdir -p $HOME/ros_ws/src\n\nRUN echo \"source /opt/ros/$ROS_DISTRO/setup.bash\" &gt;&gt; $HOME/.bashrc &amp;&amp; \\\n  echo \"source $HOME/ros_ws/install/setup.bash\" &gt;&gt; $HOME/.bashrc\n\n# Initialize rosdep\nUSER root\nRUN rosdep init || true\nUSER $USER\nRUN rosdep update\n\n# Set working directory to home and default command\nWORKDIR $HOME\nCMD [\"/bin/bash\"]\n</code></pre>"},{"location":"tools/docker/ros/#build","title":"Build","text":"<pre><code>docker build -t &lt;name:tag&gt; -f &lt;filename&gt;.Dockerfile .\n</code></pre>"},{"location":"tools/docker/ros/#run","title":"Run","text":"<pre><code># Automatically remove the container and its anonymous volumes when it exits\ndocker run --rm -it &lt;name:tag&gt; bash\n</code></pre>"},{"location":"tools/docker/ros/#dev-containers","title":"Dev Containers","text":""},{"location":"tools/docker/ros/#quick-guide","title":"Quick Guide","text":"<ol> <li>Configure the Visual Studio Code based on requirements for Docker development    (see Visual Studio Code Requirements for further    information)</li> <li>Clone the repository and open the example for container-based ROS development    with Visual Studio Code     <pre><code>git clone git@github.com:sousarbarb/sousarbarb.github.io.git\n\ncd sousarbarb.github.io.git/src/docker/ros/\ncode .\n</code></pre></li> <li>Use the command (Ctrl+Shift+P <code>&gt;dev containers reopen</code>) Dev Containers: Reopen in Container and select   the desired <code>devcontainer.json</code> file</li> </ol>"},{"location":"tools/docker/ros/#explanation","title":"Explanation","text":"<p><code>.devcontainer/</code></p> <ul> <li>Define multiple <code>devcontainer.json</code> files for different containers</li> <li>Separation on folders by the containers / services names is just for   organization purposes</li> </ul> <p><code>devcontainer.json</code> files</p> <ul> <li>Link to the <code>docker-compose.yml</code> file in the root of the project</li> <li>Selects the service (in our case, directly the container) to execute the Dev   Container</li> <li><code>\"postCreateCommand\": \"echo 'source /opt/ros/&lt;ROS DISTRO&gt;/setup.bash' &gt;&gt; ~/.bashrc &amp;&amp; echo 'source /home/ros_ws/&lt;devel|install&gt;/setup.bash' &gt;&gt; ~/.bashrc\"</code><ul> <li>upon the creation of the container, add the source of the ROS environment   variables to the <code>~/.bashrc</code></li> </ul> </li> <li><code>\"postStartCommand\": \"bash .devcontainer/ros1noetic/setup.sh\"</code><ul> <li>facilitates the build and setup of the project inside the container before   interacting with it</li> </ul> </li> <li>See https://containers.dev/implementors/json_reference/   for further information on the Dev Container metadata reference</li> </ul>"},{"location":"tools/os/","title":"Operating System (OS)","text":"<p>This guide is oriented towards Ubuntu-based Linux distributions. However, the guide may be adapted for other distributions.</p>"},{"location":"tools/os/#create-bootable-usb","title":"Create Bootable USB","text":""},{"location":"tools/os/#rufus-windows","title":"Rufus (Windows)","text":"<ol> <li>Download and install Rufus</li> <li>Download the Ubuntu image file    (https://releases.ubuntu.com/)</li> <li>Select your  USB stick for the Device option</li> <li>Select the  Ubuntu image file for the Boot selection option</li> <li>(optional) Disable quick format and/or Enable check device for bad blocks</li> <li>Press the Start button</li> </ol>"},{"location":"tools/os/#linux","title":"Linux","text":"<ol> <li>Open the Make Startup Disk application</li> <li>Download the Ubuntu image file    (https://releases.ubuntu.com/)</li> <li>Select the  Ubuntu image file for the CD-Drive/Image option</li> <li>Select your  USB stick for the Device option</li> <li>Make Startup Disk</li> </ol>"},{"location":"tools/os/#installation","title":"Installation","text":"<ol> <li> Power on or reboot your computer</li> <li>Press Del or Esc key continuously (depends on the computer    maker) to enter into BIOS menu</li> <li>BIOS Setup  Boot  Select the    USB drive as the first boot option</li> <li>Save the changes and exit the boot screen</li> <li>Select Try or Install Ubuntu</li> <li>Open the Install Ubuntu 24.04.2 LTS desktop application     </li> <li>Select the OS language     </li> <li>Choose your desired accessibility options for Ubuntu     </li> <li>Select your keyboard layout     </li> <li>(optional) Setup the Internet connection to update the installer     </li> <li>(optional) Update the OS installer if needed, and return to step 6      </li> <li>Select Interactive installation for the OS installation type     <ul> <li>Automated installation uses an YAML file for automatic Ubuntu installation   (see https://canonical-subiquity.readthedocs-hosted.com/en/latest/reference/autoinstall-reference.html)</li> </ul> </li> <li>Use Default selection to just install the essentials, web browser, and     basic utilities     </li> <li>Enable Download and install support for additional media formats to     install media codecs in your OS     </li> <li> <p>Select Manual installation to create and resize partitions yourself     </p> <ul> <li>Remove all pre-existing partitions in the disk device used for the OS   installation (<code>nvme0n1</code>)     </li> <li>Select the <code>nvme0n1</code> disk device for boot loader installation     </li> <li> <p>SSD partitions</p> <ul> <li> <p>512MB EFI System Partition</p> <p></p> </li> <li> <p><code>/</code> root (remaining of the disk free available size minus, e.g.,   16GB for swap area)</p> <p></p> </li> <li> <p>Swap area (~16GB)</p> <p></p> </li> </ul> </li> <li> <p>Final partition scheme</p> <p></p> </li> </ul> </li> <li> <p>Create your account and setup the computer information settings     </p> </li> <li>Select your timezone     </li> <li>Review your installation choices     </li> <li>Restart the computer when the installation finishes</li> <li>Only remove the installation medium (USB stick) when appearing     Please remove the installation medium, then press ENTER</li> </ol>"},{"location":"tools/os/#setup","title":"Setup","text":"<ol> <li>Open Settings<ul> <li>Task Bar   Settings</li> <li>Dock   Show Applications     Settings</li> </ul> </li> <li> Power<ul> <li>Power: Select Performance (high performance and power usage) mode</li> <li>Power Saving<ul> <li>Disable Dim Screen (to avoid reducing the screen brightness)</li> <li>Disable Screen Blank setting it to Never (does not turn off the   screen upon inactivity)</li> </ul> </li> <li>General: Enable Show Battery Percentage</li> </ul> </li> <li> Privacy &amp; Security<ul> <li> Screen Lock<ul> <li>Disable Blank Screen Delay setting it to Never</li> <li>Disable Automatic Screen Lock (does not lock the screen after it   blanks)</li> <li>Disable Lock Screen Notifications</li> </ul> </li> </ul> </li> <li> Multitasking<ul> <li>Workspaces: Select Fixed Number of Workspaces and set 4 workspaces</li> <li>Multi-Monitor: Select Workspaces on all displays</li> </ul> </li> <li> Appearance: Select Dark mode</li> <li> Ubuntu Desktop<ul> <li>Desktop Icons: Set Size to Small</li> <li>Dock: Set Icon Size to the minimum (occupies less space)</li> </ul> </li> <li> Keyboard<ul> <li>Keyboard Shortcuts:<ul> <li>Home folder: Super+E</li> </ul> </li> </ul> </li> </ol>"},{"location":"tools/os/#update","title":"Update","text":"<pre><code>sudo apt update\nsudo apt dist-upgrade\n</code></pre>"},{"location":"tools/os/dev/","title":"Development Environment","text":""},{"location":"tools/os/dev/#c","title":"C++","text":"<pre><code>sudo apt install build-essential gcc-doc gdb gdb-doc -y\nsudo apt install cmake cmake-doc cmake-qt-gui -y\n</code></pre> <p>Note: <code>*-doc</code> packages in Linux install additional documentation, usually, in PDF or HTML format, available in <code>/usr/share/doc/</code>.</p>"},{"location":"tools/os/dev/#doxygen","title":"Doxygen","text":"<pre><code>sudo apt install doxygen doxygen-doc doxygen-gui doxygen-latex -y\n</code></pre>"},{"location":"tools/os/dev/#terminator","title":"Terminator","text":"<pre><code>sudo apt install terminator -y\n</code></pre>"},{"location":"tools/os/dev/#visual-studio-code","title":"Visual Studio Code","text":""},{"location":"tools/os/dev/#installation","title":"Installation","text":"<ol> <li>Download  Visual Studio Code    (available at    https://code.visualstudio.com/download)</li> <li>Execute the following commands     <pre><code>cd ~/Downloads/\nsudo apt install ./code_1.101.2-1750797935_amd64.deb -y\n</code></pre></li> </ol>"},{"location":"tools/os/dev/#setup","title":"Setup","text":"<ol> <li>Open  Visual Studio Code<ul> <li>GNOME menu</li> <li>Terminal (<code>$ code</code> | <code>$ code .</code> to open the VS Code in the current   directory)</li> </ul> </li> <li> Extensions    (Ctrl+Shift+X | File  Preferences     Extensions)<ul> <li> ms-vscode.cpptools-extension-pack<ul> <li>ms-vscode.cpptools</li> <li>ms-vscode.cpptools-themes</li> <li>ms-vscode.cmake-tools</li> </ul> </li> <li> ms-python.python</li> <li> ms-python.debugpy</li> <li> ms-python.vscode-pylance</li> <li> cschlosser.doxdocgen</li> <li>  redhat.vscode-xml</li> <li> redhat.vscode-yaml</li> <li> tomoki1207.pdf</li> </ul> </li> </ol>"},{"location":"tools/os/nvidia/","title":"NVIDIA Drivers","text":""},{"location":"tools/os/nvidia/#proprietary-gpu-drivers-ppa","title":"Proprietary GPU Drivers PPA","text":"<pre><code>lspci | grep -i nvidia\n\ncat /proc/driver/nvidia/version\n\nsudo add-apt-repository ppa:graphics-drivers/ppa  # Proprietary GPU Drivers PPA\nsudo apt update\n\nsudo ubuntu-drivers list\n# OR sudo ubuntu-drivers list --gpgpu\n\nsudo ubuntu-drivers install nvidia:560\n# OR sudo ubuntu-drivers install (automatic detection, install hw best match)\n</code></pre> <p>Sources:</p> <ul> <li>https://launchpad.net/~graphics-drivers/+archive/ubuntu/ppa</li> <li>https://documentation.ubuntu.com/server/how-to/graphics/install-nvidia-drivers/</li> </ul>"},{"location":"tools/os/nvidia/#setup","title":"Setup","text":"<pre><code>nvidia-smi\nnvidia-settings   # Enable NVIDIA (Performance Mode) in PRIME Profiles\n</code></pre>"},{"location":"tools/os/remote-access/","title":"Remote Access","text":"<p>Tip</p> <p>If you want to have a remote graphical output without having a monitor connected to the SBC (AnyDesk, RustDesk, Remmina w/ VNC), use the HDMI Dummy Plug.</p>"},{"location":"tools/os/remote-access/#anydesk","title":"AnyDesk","text":"<ol> <li>Download AnyDesk (available at    https://anydesk.com/en/downloads/linux)</li> <li>Execute the following commands     <pre><code>cd ~/Downloads/\nsudo apt update\nsudo apt install ./anydesk_7.0.0-1_amd64.deb\n</code></pre></li> <li>Open AnyDesk</li> <li>(optional) Set an alias to use it for remote access instead of the    AnyDesk ID</li> <li>Open the  Menu   Settings<ul> <li> Security   Unlock<ul> <li>Enable unattended access:<ul> <li>Set a password</li> <li>Set Full Access for the permission profile</li> </ul> </li> <li>(optional) Disable Search local network for other AnyDesk clients</li> <li>(optional) Enable Exclude this device from discovery</li> </ul> </li> <li>(optional)  Display<ul> <li>Set Best performance in the quality</li> <li>Set Optimize screen usage (strecht) in view mode</li> </ul> </li> </ul> </li> </ol> <p>Tip</p> <p>If you are having problems connecting to another computer through AnyDesk, try to remove the local cache folder.</p> <pre><code>ll ~/.anydesk/\nrm -rf ~/.anydesk/\n</code></pre> <p>Warning</p> <p>AnyDesk requires both remote access endpoints to have Internet connection.</p> <p>Warning</p> <p>Some IT managers may lock the remote access through AnyDesk by disabling connections through <code>*.net.anydesk.com</code>, even if both endpoints have an Internet connection. More information in https://support.anydesk.com/knowledge/firewall.</p>"},{"location":"tools/os/remote-access/#rustdesk","title":"RustDesk","text":"<ol> <li>Download RustDesk (available at    https://github.com/rustdesk/rustdesk/releases/)</li> <li>Execute the following commands     <pre><code>cd ~/Downloads/\nsudo apt update\nsudo apt install ./rustdesk-1.4.0-x86_64.deb -y\n</code></pre></li> <li>Open RustDesk</li> <li>Open the  Menu   Settings:<ul> <li> Security   Unlock   Security Settings<ul> <li>Use permanent password</li> <li>(optional) Deny LAN discovery</li> <li>(optional) Enable direct IP access  Define   the Port (e.g., <code>21118</code>)</li> </ul> </li> <li>(optional)  Display<ul> <li>Set Scale adaptive</li> <li>Set Optimize reaction time</li> <li>Other default options<ul> <li> Show monitors in toolbar</li> <li> Enable file copy and paste</li> <li> Use all my displays for the remote session</li> </ul> </li> </ul> </li> </ul> </li> </ol> <p>Tip</p> <p>RustDesk is an open-source remote access software as an alternative to AnyDesk and similiar applications, allowing your own self-hosted servers and direct IP access to your machine.</p> <p>Warning</p> <p>Direct IP access through RustDesk remote connection is unecrypted!</p>"},{"location":"tools/os/remote-access/#remmina","title":"Remmina","text":"<p>Ubuntu 24.04.2 LTS</p> <ol> <li>Execute the following commands     <pre><code>sudo apt install remmina remmina-plugin-rdp -y\nsudo apt install xrdp -y    # server for Microsoft's Remote Desktop protocol (RDP)\n</code></pre></li> <li> <p>Open  Settings   System  Remote Desktop</p> <ul> <li>Enable Desktop Sharing</li> <li>Enable Remote Control</li> <li> <p>Generate New Password</p> <p>Warning</p> <p>Do not use your account password for remote connection, the client can see the password remotely!</p> </li> </ul> </li> <li> <p>Open Remmina on the client side</p> </li> <li>Open an RDP connection with the address <code>&lt;IP address&gt;:&lt;port: e.g., 3390&gt;</code></li> </ol> <p>...older Ubuntu versions...</p> <ol> <li>Execute the following commands     <pre><code>sudo apt install remmina remmina-plugin-vnc -y\nsudo apt install vino -y\n</code></pre></li> <li>Open  Settings   Sharing  Enable    Screen Sharing</li> <li>Open Remmina on the client side</li> <li>Open a VNC connection with the address    <code>&lt;computer name&gt;.local</code> or <code>&lt;IP address&gt;</code></li> </ol>"},{"location":"tools/os/remote-access/#secure-shell-ssh","title":"Secure Shell (SSH)","text":"<pre><code># Server Computer\nsudo apt install openssh-server\n\n# Remote access / Client Computer\nsudo apt install openssh-client\n\nssh &lt;username&gt;@&lt;IP address&gt;\n</code></pre> <p>Warning</p> <p>SSH 22 default port must be open in your network's firewall settings.</p>"},{"location":"tools/os/remote-access/#zerotier","title":"ZeroTier","text":"<ol> <li>Execute the following commands     <pre><code>curl -s 'https://raw.githubusercontent.com/zerotier/ZeroTierOne/main/doc/contact%40zerotier.com.gpg' | gpg --import &amp;&amp; if z=$(curl -s 'https://install.zerotier.com/' | gpg); then echo \"$z\" | sudo bash; fi\n\nsudo zerotier-cli info\n</code></pre></li> <li>Go to https://my.zerotier.com/  Create A Network<ul> <li>Enable Auto-Assign from Range for the IPv4 Auto-Assign</li> <li>Enable Broadcast for Multicast</li> </ul> </li> <li>Execute the following commands     <pre><code>sudo zerotier-cli join &lt;Network ID&gt;\n</code></pre></li> <li>Go to https://my.zerotier.com/  Access the network previously created     Authorize the new device</li> <li> <p>Execute the following commands     <pre><code>ifconfig  # (1)!\n</code></pre></p> <ol> <li>should appear a new network interface specific to ZeroTier with an    auto-assigned STATIC IP address</li> </ol> </li> <li> <p>Execute remote access through VNC, SSH, or another method that allows IP    direct access using the ZeroTier IP address</p> <p>Warning</p> <p>Both devices should be added in your private ZeroTier network</p> </li> </ol>"}]}